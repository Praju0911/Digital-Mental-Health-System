{"version":3,"sources":["turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/Digital-Mental-Health-System/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/Digital-Mental-Health-System/frontend/src/app/professional/dashboard/page.jsx"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport { db, auth } from \"@/lib/firebase\";\r\nimport { doc, getDoc, collection, query, orderBy, limit, getDocs } from \"firebase/firestore\";\r\n\r\nexport default function StudentDashboard() {\r\n  const [latestStress, setLatestStress] = useState(null);\r\n  const [historical, setHistorical] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  const userId = auth.currentUser?.uid;\r\n  const email = auth.currentUser?.email;\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch latest stress from stressLevels\r\n        const docRef = doc(db, \"stressLevels\", userId);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          setLatestStress(docSnap.data().stressLevel);\r\n        }\r\n\r\n        // Fetch last 5 historical mood entries\r\n        const moodQuery = query(\r\n          collection(db, \"moodEntries\"),\r\n          orderBy(\"timestamp\", \"desc\"),\r\n          limit(5)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(moodQuery);\r\n        const entries = querySnapshot.docs\r\n          .map((d) => d.data())\r\n          .filter((entry) => entry.uid === userId);\r\n        setHistorical(entries);\r\n      } catch (err) {\r\n        console.error(\"Error fetching dashboard data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Determine emoji for latest stress\r\n  const getEmoji = (stress) => {\r\n    if (stress < 4) return \"😊\";\r\n    if (stress < 7) return \"😐\";\r\n    return \"😢\";\r\n  };\r\n\r\n  if (!userId) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <p>Please login to access dashboard.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-8 bg-gray-100 flex flex-col gap-8\">\r\n      <h1 className=\"text-3xl font-bold\">Welcome, {email}</h1>\r\n\r\n      {/* Latest Stress */}\r\n      {latestStress !== null && (\r\n        <div className=\"bg-white p-6 rounded-xl shadow-md flex flex-col items-center gap-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Today's Stress Level</h2>\r\n          <div className=\"text-6xl\">{getEmoji(latestStress)}</div>\r\n          <GaugeChart\r\n            id=\"latest-gauge\"\r\n            nrOfLevels={20}\r\n            colors={[\r\n              \"#00FF00\", \"#33FF00\", \"#66FF00\", \"#99FF00\",\r\n              \"#CCFF00\", \"#FFFF00\", \"#FFCC00\", \"#FF9900\",\r\n              \"#FF6600\", \"#FF3300\", \"#FF0000\"\r\n            ]}\r\n            percent={latestStress / 10}\r\n            arcPadding={0.02}\r\n            needleColor=\"#333333\"\r\n            needleBaseColor=\"#333333\"\r\n            animate={true}\r\n            formatTextValue={() => `${latestStress} / 10`}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Historical Entries */}\r\n      <div className=\"bg-white p-6 rounded-xl shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Recent Stress Logs</h2>\r\n        {historical.length === 0 ? (\r\n          <p>No previous entries found.</p>\r\n        ) : (\r\n          <ul className=\"space-y-2\">\r\n            {historical.map((entry, idx) => (\r\n              <li key={idx} className=\"flex justify-between items-center bg-gray-50 p-3 rounded-lg\">\r\n                <span>{new Date(entry.timestamp.seconds * 1000).toLocaleDateString()}</span>\r\n                <span className=\"flex items-center gap-2\">\r\n                  {entry.stressLevel} / 10 {getEmoji(entry.stressLevel)}\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => router.push(`/student/stress-meter?uid=${userId}`)}\r\n        className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-4 rounded-xl shadow-lg transition-transform transform hover:scale-105\"\r\n      >\r\n        Log Today's Stress\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["module","exports","require","vendored","React","AppRouterContext","HooksClientContext","ServerInsertedHtml","process","env","NEXT_RUNTIME","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","ReactJsxRuntime"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}