{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAE-k8r8F4II_5rBfTvh6BNzQDku7KE_Gg\",\r\n  authDomain: \"mental-health-87a9d.firebaseapp.com\",\r\n  projectId: \"mental-health-87a9d\",\r\n  storageBucket: \"mental-health-87a9d.firebasestorage.app\",\r\n  messagingSenderId: \"500649525001\",\r\n  appId: \"1:500649525001:web:60ff34cd3656aebcbe9dd8\",\r\n  measurementId: \"G-6EVCYEMBVS\"\r\n};\r\n\r\nlet app;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApps()[0];\r\n}\r\n\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { app, auth, db };"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,IAAI;AACJ,IAAI,CAAC,IAAA,gOAAO,IAAG,MAAM,EAAE;IACrB,MAAM,IAAA,sOAAa,EAAC;AACtB,OAAO;IACL,MAAM,IAAA,gOAAO,GAAE,CAAC,EAAE;AACpB;AAEA,MAAM,OAAO,IAAA,kOAAO,EAAC;AACrB,MAAM,KAAK,IAAA,sOAAY,EAAC","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/app/admin/dashboard/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport { db, auth } from \"@/lib/firebase\";\r\nimport { doc, getDoc, collection, query, orderBy, limit, getDocs } from \"firebase/firestore\";\r\n\r\nexport default function StudentDashboard() {\r\n  const [latestStress, setLatestStress] = useState(null);\r\n  const [historical, setHistorical] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  const userId = auth.currentUser?.uid;\r\n  const email = auth.currentUser?.email;\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch latest stress from stressLevels\r\n        const docRef = doc(db, \"stressLevels\", userId);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          setLatestStress(docSnap.data().stressLevel);\r\n        }\r\n\r\n        // Fetch last 5 historical mood entries\r\n        const moodQuery = query(\r\n          collection(db, \"moodEntries\"),\r\n          orderBy(\"timestamp\", \"desc\"),\r\n          limit(5)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(moodQuery);\r\n        const entries = querySnapshot.docs\r\n          .map((d) => d.data())\r\n          .filter((entry) => entry.uid === userId);\r\n        setHistorical(entries);\r\n      } catch (err) {\r\n        console.error(\"Error fetching dashboard data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  // Determine emoji for latest stress\r\n  const getEmoji = (stress) => {\r\n    if (stress < 4) return \"😊\";\r\n    if (stress < 7) return \"😐\";\r\n    return \"😢\";\r\n  };\r\n\r\n  if (!userId) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <p>Please login to access dashboard.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-8 bg-gray-100 flex flex-col gap-8\">\r\n      <h1 className=\"text-3xl font-bold\">Welcome, {email}</h1>\r\n\r\n      {/* Latest Stress */}\r\n      {latestStress !== null && (\r\n        <div className=\"bg-white p-6 rounded-xl shadow-md flex flex-col items-center gap-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Today's Stress Level</h2>\r\n          <div className=\"text-6xl\">{getEmoji(latestStress)}</div>\r\n          <GaugeChart\r\n            id=\"latest-gauge\"\r\n            nrOfLevels={20}\r\n            colors={[\r\n              \"#00FF00\", \"#33FF00\", \"#66FF00\", \"#99FF00\",\r\n              \"#CCFF00\", \"#FFFF00\", \"#FFCC00\", \"#FF9900\",\r\n              \"#FF6600\", \"#FF3300\", \"#FF0000\"\r\n            ]}\r\n            percent={latestStress / 10}\r\n            arcPadding={0.02}\r\n            needleColor=\"#333333\"\r\n            needleBaseColor=\"#333333\"\r\n            animate={true}\r\n            formatTextValue={() => `${latestStress} / 10`}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Historical Entries */}\r\n      <div className=\"bg-white p-6 rounded-xl shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Recent Stress Logs</h2>\r\n        {historical.length === 0 ? (\r\n          <p>No previous entries found.</p>\r\n        ) : (\r\n          <ul className=\"space-y-2\">\r\n            {historical.map((entry, idx) => (\r\n              <li key={idx} className=\"flex justify-between items-center bg-gray-50 p-3 rounded-lg\">\r\n                <span>{new Date(entry.timestamp.seconds * 1000).toLocaleDateString()}</span>\r\n                <span className=\"flex items-center gap-2\">\r\n                  {entry.stressLevel} / 10 {getEmoji(entry.stressLevel)}\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => router.push(`/student/stress-meter?uid=${userId}`)}\r\n        className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-4 rounded-xl shadow-lg transition-transform transform hover:scale-105\"\r\n      >\r\n        Log Today's Stress\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}