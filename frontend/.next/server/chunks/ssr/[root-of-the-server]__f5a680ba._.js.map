{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAE-k8r8F4II_5rBfTvh6BNzQDku7KE_Gg\",\r\n  authDomain: \"mental-health-87a9d.firebaseapp.com\",\r\n  projectId: \"mental-health-87a9d\",\r\n  storageBucket: \"mental-health-87a9d.firebasestorage.app\",\r\n  messagingSenderId: \"500649525001\",\r\n  appId: \"1:500649525001:web:60ff34cd3656aebcbe9dd8\",\r\n  measurementId: \"G-6EVCYEMBVS\"\r\n};\r\n\r\nlet app;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApps()[0];\r\n}\r\n\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { app, auth, db };"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,IAAI;AACJ,IAAI,CAAC,IAAA,gOAAO,IAAG,MAAM,EAAE;IACrB,MAAM,IAAA,sOAAa,EAAC;AACtB,OAAO;IACL,MAAM,IAAA,gOAAO,GAAE,CAAC,EAAE;AACpB;AAEA,MAAM,OAAO,IAAA,kOAAO,EAAC;AACrB,MAAM,KAAK,IAAA,sOAAY,EAAC","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/app/components/StressMeter.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\nimport { db } from \"@/lib/firebase\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nexport default function StressMeter({ userId }) {\r\n  const [level, setLevel] = useState(0.5); // target slider\r\n  const [displayLevel, setDisplayLevel] = useState(0.5); // animated needle\r\n  const [saving, setSaving] = useState(false);\r\n  const [emoji, setEmoji] = useState(\"üòê\");\r\n  const router = useRouter();\r\n  const animationRef = useRef();\r\n\r\n  // Load previous stress level from Firestore\r\n  useEffect(() => {\r\n    const loadStress = async () => {\r\n      try {\r\n        const docRef = doc(db, \"stressLevels\", userId);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          const savedLevel = docSnap.data().stressLevel / 10; // scale 0-1\r\n          setLevel(savedLevel);\r\n          setDisplayLevel(savedLevel);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error loading stress level:\", err);\r\n      }\r\n    };\r\n    loadStress();\r\n  }, [userId]);\r\n\r\n  // Animate needle smoothly\r\n  useEffect(() => {\r\n    const animate = () => {\r\n      setDisplayLevel((prev) => {\r\n        const diff = level - prev;\r\n        if (Math.abs(diff) < 0.001) return level;\r\n        return prev + diff * 0.1;\r\n      });\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n    animationRef.current = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(animationRef.current);\r\n  }, [level]);\r\n\r\n  // Update emoji dynamically\r\n  useEffect(() => {\r\n    if (displayLevel < 0.33) setEmoji(\"üòä\");\r\n    else if (displayLevel < 0.66) setEmoji(\"üòê\");\r\n    else setEmoji(\"üò¢\");\r\n  }, [displayLevel]);\r\n\r\n  // Dynamic background based on stress level\r\n  const bgColor = () => {\r\n    if (displayLevel < 0.33) return \"bg-green-200\";\r\n    else if (displayLevel < 0.66) return \"bg-yellow-200\";\r\n    else return \"bg-red-200\";\r\n  };\r\n\r\n  // Save stress level to Firestore\r\n  const handleSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      const stressLevel = Math.round(level * 10); // scale 0-10\r\n      const docRef = doc(db, \"stressLevels\", userId);\r\n      await setDoc(docRef, { stressLevel, updatedAt: new Date() });\r\n      alert(\"Stress level saved successfully ‚úÖ\");\r\n      router.push(\"/student/dashboard\");\r\n    } catch (err) {\r\n      console.error(\"Error saving stress level:\", err);\r\n      alert(\"Error saving stress level ‚ùå\");\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col items-center justify-center w-full max-w-md rounded-xl p-8 space-y-6 transition-colors duration-500 ${bgColor()}`}>\r\n      <h1 className=\"text-3xl font-bold text-gray-800 text-center\">\r\n        Daily Stress Meter\r\n      </h1>\r\n\r\n      {/* Emoji Feedback */}\r\n      <div className=\"text-6xl animate-bounce\">{emoji}</div>\r\n\r\n      {/* Gauge Chart */}\r\n      <GaugeChart\r\n        id=\"animated-gauge\"\r\n        nrOfLevels={20}\r\n        colors={[\r\n          \"#00FF00\", \"#33FF00\", \"#66FF00\", \"#99FF00\",\r\n          \"#CCFF00\", \"#FFFF00\", \"#FFCC00\", \"#FF9900\",\r\n          \"#FF6600\", \"#FF3300\", \"#FF0000\"\r\n        ]}\r\n        percent={displayLevel}\r\n        arcPadding={0.02}\r\n        needleColor=\"#333333\"\r\n        needleBaseColor=\"#333333\"\r\n        animate={false}\r\n        textColor=\"#000\"\r\n        formatTextValue={() => `${Math.round(displayLevel * 10)} / 10`}\r\n      />\r\n\r\n      {/* Slider */}\r\n      <input\r\n        type=\"range\"\r\n        min={0}\r\n        max={1}\r\n        step={0.01}\r\n        value={level}\r\n        onChange={(e) => setLevel(parseFloat(e.target.value))}\r\n        className=\"w-full h-2 bg-gray-300 rounded-lg accent-indigo-600\"\r\n      />\r\n\r\n      <p className=\"text-lg font-semibold\">\r\n        Selected Level: {Math.round(level * 10)} / 10\r\n      </p>\r\n\r\n      <button\r\n        onClick={handleSave}\r\n        disabled={saving}\r\n        className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-4 rounded-xl shadow-lg disabled:opacity-50 transition-transform transform hover:scale-105\"\r\n      >\r\n        {saving ? \"Saving...\" : \"Submit Stress Level\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/app/components/Quotes.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst quoteList = [\r\n  \"Keep going, you're doing great!\",\r\n  \"Breathe in, breathe out, and relax.\",\r\n  \"Every day is a fresh start.\",\r\n  \"Your feelings are valid.\",\r\n  \"Small steps lead to big changes.\",\r\n  \"You are stronger than you think.\",\r\n  \"Take a deep breath and smile.\"\r\n];\r\n\r\nexport default function Quotes() {\r\n  const [quote, setQuote] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setQuote(quoteList[Math.floor(Math.random() * quoteList.length)]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"text-center max-w-lg\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Daily Inspiration</h1>\r\n      <p className=\"text-xl italic leading-relaxed\">{quote}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,YAAY;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,sQAAQ,EAAC;IAEnC,IAAA,uQAAS,EAAC;QACR,SAAS,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;IAClE,GAAG,EAAE;IAEL,qBACE,mSAAC;QAAI,WAAU;;0BACb,mSAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,mSAAC;gBAAE,WAAU;0BAAkC;;;;;;;;;;;;AAGrD","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Dell/Digital-Mental-Health-System/frontend/src/app/student/dashboard/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport AnimatedStressMeter from \"../../components/StressMeter\";\r\nimport Quotes from \"../../components/Quotes\";\r\n\r\nexport default function StressMeterPage() {\r\n  const userId = \"demo_user_123\"; // Replace with Firebase UID or email\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col lg:flex-row\">\r\n      {/* Left Side - Quotes */}\r\n      <div className=\"lg:w-1/2 bg-gradient-to-br from-purple-400 to-indigo-600 flex items-center justify-center p-8 text-white\">\r\n        <Quotes />\r\n      </div>\r\n\r\n      {/* Right Side - Animated Stress Meter */}\r\n      <div className=\"lg:w-1/2 bg-gray-100 flex items-center justify-center p-8\">\r\n        <AnimatedStressMeter userId={userId} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,SAAS,iBAAiB,qCAAqC;IAErE,qBACE,mSAAC;QAAI,WAAU;;0BAEb,mSAAC;gBAAI,WAAU;0BACb,cAAA,mSAAC,mMAAM;;;;;;;;;;0BAIT,mSAAC;gBAAI,WAAU;0BACb,cAAA,mSAAC,wMAAmB;oBAAC,QAAQ;;;;;;;;;;;;;;;;;AAIrC","debugId":null}}]
}