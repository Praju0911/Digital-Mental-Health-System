{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishalprajwal/Documents/mental-health/frontend/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAE-k8r8F4II_5rBfTvh6BNzQDku7KE_Gg\",\n  authDomain: \"mental-health-87a9d.firebaseapp.com\",\n  projectId: \"mental-health-87a9d\",\n  storageBucket: \"mental-health-87a9d.firebasestorage.app\",\n  messagingSenderId: \"500649525001\",\n  appId: \"1:500649525001:web:60ff34cd3656aebcbe9dd8\",\n  measurementId: \"G-6EVCYEMBVS\"\n};\n\nlet app;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { app, auth, db };"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,IAAI;AACJ,IAAI,CAAC,IAAA,2KAAO,IAAG,MAAM,EAAE;IACrB,MAAM,IAAA,iLAAa,EAAC;AACtB,OAAO;IACL,MAAM,IAAA,2KAAO,GAAE,CAAC,EAAE;AACpB;AAEA,MAAM,OAAO,IAAA,6KAAO,EAAC;AACrB,MAAM,KAAK,IAAA,iLAAY,EAAC","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishalprajwal/Documents/mental-health/frontend/src/app/components/StressMeter.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { db } from \"@/lib/firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\n\nexport default function StressMeter({ userId }) {\n  const [level, setLevel] = useState(0.5); // target slider\n  const [displayLevel, setDisplayLevel] = useState(0.5); // animated needle\n  const [saving, setSaving] = useState(false);\n  const [emoji, setEmoji] = useState(\"üòê\");\n  const router = useRouter();\n  const animationRef = useRef();\n\n  // Load previous stress level from Firestore\n  useEffect(() => {\n    const loadStress = async () => {\n      try {\n        const docRef = doc(db, \"stressLevels\", userId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          const savedLevel = docSnap.data().stressLevel / 10; // scale 0-1\n          setLevel(savedLevel);\n          setDisplayLevel(savedLevel);\n        }\n      } catch (err) {\n        console.error(\"Error loading stress level:\", err);\n      }\n    };\n    loadStress();\n  }, [userId]);\n\n  // Animate needle smoothly\n  useEffect(() => {\n    const animate = () => {\n      setDisplayLevel((prev) => {\n        const diff = level - prev;\n        if (Math.abs(diff) < 0.001) return level;\n        return prev + diff * 0.1;\n      });\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, [level]);\n\n  // Update emoji dynamically\n  useEffect(() => {\n    if (displayLevel < 0.33) setEmoji(\"üòä\");\n    else if (displayLevel < 0.66) setEmoji(\"üòê\");\n    else setEmoji(\"üò¢\");\n  }, [displayLevel]);\n\n  // Dynamic background based on stress level\n  const bgColor = () => {\n    if (displayLevel < 0.33) return \"bg-green-200\";\n    else if (displayLevel < 0.66) return \"bg-yellow-200\";\n    else return \"bg-red-200\";\n  };\n\n  // Save stress level to Firestore\n  const handleSave = async () => {\n    try {\n      setSaving(true);\n      const stressLevel = Math.round(level * 10); // scale 0-10\n      const docRef = doc(db, \"stressLevels\", userId);\n      await setDoc(docRef, { stressLevel, updatedAt: new Date() });\n      alert(\"Stress level saved successfully ‚úÖ\");\n      router.push(\"/student/dashboard\");\n    } catch (err) {\n      console.error(\"Error saving stress level:\", err);\n      alert(\"Error saving stress level ‚ùå\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center w-full max-w-md rounded-xl p-8 space-y-6 transition-colors duration-500 ${bgColor()}`}>\n      <h1 className=\"text-3xl font-bold text-gray-800 text-center\">\n        Daily Stress Meter\n      </h1>\n\n      {/* Emoji Feedback */}\n      <div className=\"text-6xl animate-bounce\">{emoji}</div>\n\n      {/* Gauge Chart */}\n      <GaugeChart\n        id=\"animated-gauge\"\n        nrOfLevels={20}\n        colors={[\n          \"#00FF00\", \"#33FF00\", \"#66FF00\", \"#99FF00\",\n          \"#CCFF00\", \"#FFFF00\", \"#FFCC00\", \"#FF9900\",\n          \"#FF6600\", \"#FF3300\", \"#FF0000\"\n        ]}\n        percent={displayLevel}\n        arcPadding={0.02}\n        needleColor=\"#333333\"\n        needleBaseColor=\"#333333\"\n        animate={false}\n        textColor=\"#000\"\n        formatTextValue={() => `${Math.round(displayLevel * 10)} / 10`}\n      />\n\n      {/* Slider */}\n      <input\n        type=\"range\"\n        min={0}\n        max={1}\n        step={0.01}\n        value={level}\n        onChange={(e) => setLevel(parseFloat(e.target.value))}\n        className=\"w-full h-2 bg-gray-300 rounded-lg accent-indigo-600\"\n      />\n\n      <p className=\"text-lg font-semibold\">\n        Selected Level: {Math.round(level * 10)} / 10\n      </p>\n\n      <button\n        onClick={handleSave}\n        disabled={saving}\n        className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-4 rounded-xl shadow-lg disabled:opacity-50 transition-transform transform hover:scale-105\"\n      >\n        {saving ? \"Saving...\" : \"Submit Stress Level\"}\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishalprajwal/Documents/mental-health/frontend/src/app/components/Quotes.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nconst quoteList = [\n  \"Keep going, you're doing great!\",\n  \"Breathe in, breathe out, and relax.\",\n  \"Every day is a fresh start.\",\n  \"Your feelings are valid.\",\n  \"Small steps lead to big changes.\",\n  \"You are stronger than you think.\",\n  \"Take a deep breath and smile.\"\n];\n\nexport default function Quotes() {\n  const [quote, setQuote] = useState(\"\");\n\n  useEffect(() => {\n    setQuote(quoteList[Math.floor(Math.random() * quoteList.length)]);\n  }, []);\n\n  return (\n    <div className=\"text-center max-w-lg\">\n      <h1 className=\"text-3xl font-bold mb-6\">Daily Inspiration</h1>\n      <p className=\"text-xl italic leading-relaxed\">{quote}</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,YAAY;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IAEnC,IAAA,kNAAS,EAAC;QACR,SAAS,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;IAClE,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAE,WAAU;0BAAkC;;;;;;;;;;;;AAGrD","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///Users/vishalprajwal/Documents/mental-health/frontend/src/app/student/dashboard/page.jsx"],"sourcesContent":["\"use client\";\n\nimport AnimatedStressMeter from \"../../components/StressMeter\";\nimport Quotes from \"../../components/Quotes\";\n\nexport default function StressMeterPage() {\n  const userId = \"demo_user_123\"; // Replace with Firebase UID or email\n\n  return (\n    <div className=\"min-h-screen flex flex-col lg:flex-row\">\n      {/* Left Side - Quotes */}\n      <div className=\"lg:w-1/2 bg-gradient-to-br from-purple-400 to-indigo-600 flex items-center justify-center p-8 text-white\">\n        <Quotes />\n      </div>\n\n      {/* Right Side - Animated Stress Meter */}\n      <div className=\"lg:w-1/2 bg-gray-100 flex items-center justify-center p-8\">\n        <AnimatedStressMeter userId={userId} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,SAAS,iBAAiB,qCAAqC;IAErE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,8IAAM;;;;;;;;;;0BAIT,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mJAAmB;oBAAC,QAAQ;;;;;;;;;;;;;;;;;AAIrC","debugId":null}}]
}